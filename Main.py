from PyQt5 import QtCore, QtGui, QtWidgets
import requests
import re
from bs4 import BeautifulSoup
from PyQt5.QtGui import QFont
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        label_font = QFont("Segoe UI Variable Small Semibol", 11)
        label_font1 = QFont("Segoe UI Variable Small Semibol", 8)
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(370, 530)
        MainWindow.setMinimumSize(QtCore.QSize(370, 530))
        MainWindow.setMaximumSize(QtCore.QSize(370, 530))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(0, 0, 370, 512))
        self.widget.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.widget.setObjectName("widget")
        self.widget_2 = QtWidgets.QWidget(self.widget)
        self.widget_2.setGeometry(QtCore.QRect(0, 0, 430, 61))
        self.widget_2.setStyleSheet("background-color: rgb(36, 40, 58);")
        self.widget_2.setObjectName("widget_2")
        self.comboBox = QtWidgets.QComboBox(self.widget_2)
        self.comboBox.setGeometry(QtCore.QRect(0, 0, 101, 61))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.comboBox.setFont(font)
        self.comboBox.setStyleSheet("color: rgb(255, 255, 255);\n"
"")
        self.comboBox.setEditable(False)
        self.comboBox.setDuplicatesEnabled(False)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        # self.comboBox.addItem("")
        # self.comboBox.addItem("")
        self.widget_3 = QtWidgets.QWidget(self.widget_2)
        self.widget_3.setGeometry(QtCore.QRect(100, 0, 201, 61))
        self.widget_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.widget_3.setObjectName("widget_3")
        self.label_2 = QtWidgets.QLabel(self.widget_3)
        self.label_2.setGeometry(QtCore.QRect(71, 0, 91, 21))
        self.label_2.setObjectName("label_2")
        self.label_2.setFont(label_font1)
        self.DateLabel = QtWidgets.QLabel(self.widget_3)
        self.DateLabel.setGeometry(QtCore.QRect(10, 20, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.DateLabel.setFont(font)
        self.DateLabel.setObjectName("DateLabel")
        self.TimeLabel = QtWidgets.QLabel(self.widget_3)
        self.TimeLabel.setGeometry(QtCore.QRect(140, 20, 51, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.TimeLabel.setFont(font)
        self.TimeLabel.setObjectName("TimeLabel")
        self.RefreshButton = QtWidgets.QPushButton(self.widget_2)
        self.RefreshButton.setGeometry(QtCore.QRect(300, 0, 71, 61))
        self.RefreshButton.setStyleSheet("background-color: rgb(74, 84, 115);\n"
"background-color: rgb(86, 103, 115);\n"
"\n"
"border: none;")
        self.RefreshButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("D:\project\Git\Dollar_Price\RefreshIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.RefreshButton.setIcon(icon)
        self.RefreshButton.setIconSize(QtCore.QSize(25, 25))
        self.RefreshButton.setDefault(False)
        self.RefreshButton.setObjectName("RefreshButton")
        self.LivePrice = QtWidgets.QLabel(self.widget)
        self.LivePrice.setGeometry(QtCore.QRect(0, 60, 371, 91))
        font = QtGui.QFont()
        font.setPointSize(28)
        self.LivePrice.setFont(font)
        self.LivePrice.setStyleSheet("background-color: #DC3545;\n"
"color: rgb(255, 255, 255);")
        self.LivePrice.setAlignment(QtCore.Qt.AlignCenter)
        self.LivePrice.setObjectName("LivePrice")
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setGeometry(QtCore.QRect(253, 126, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_6.setFont(label_font)
        self.label_6.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(220, 53, 69);")
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.widget_4 = QtWidgets.QWidget(self.widget)
        self.widget_4.setGeometry(QtCore.QRect(0, 154, 370, 361))
        self.widget_4.setStyleSheet("background-color: rgb(24, 26, 39);")
        self.widget_4.setObjectName("widget_4")
        self.widget_5 = QtWidgets.QWidget(self.widget_4)
        self.widget_5.setGeometry(QtCore.QRect(0, 0, 370, 80))
        self.widget_5.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(36, 40, 58);")
        self.widget_5.setObjectName("widget_5")
        self.label_7 = QtWidgets.QLabel(self.widget_5)
        self.label_7.setGeometry(QtCore.QRect(160, 0, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_7.setFont(label_font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.OpeningLabel = QtWidgets.QLabel(self.widget_5)
        self.OpeningLabel.setGeometry(QtCore.QRect(100, 30, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.OpeningLabel.setFont(font)
        self.OpeningLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.OpeningLabel.setObjectName("OpeningLabel")
        self.widget_6 = QtWidgets.QWidget(self.widget_4)
        self.widget_6.setGeometry(QtCore.QRect(0, 82, 370, 80))
        self.widget_6.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(36, 40, 58);")
        self.widget_6.setObjectName("widget_6")
        self.label_8 = QtWidgets.QLabel(self.widget_6)
        self.label_8.setGeometry(QtCore.QRect(160, 0, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_8.setFont(label_font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.ChangeLabel = QtWidgets.QLabel(self.widget_6)
        self.ChangeLabel.setGeometry(QtCore.QRect(100, 30, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.ChangeLabel.setFont(font)
        self.ChangeLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.ChangeLabel.setObjectName("ChangeLabel")
        self.widget_8 = QtWidgets.QWidget(self.widget_4)
        self.widget_8.setGeometry(QtCore.QRect(0, 246, 370, 80))
        self.widget_8.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(36, 40, 58);")
        self.widget_8.setObjectName("widget_8")
        self.label_10 = QtWidgets.QLabel(self.widget_8)
        self.label_10.setGeometry(QtCore.QRect(160, 0, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_10.setFont(label_font)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.HighLabel = QtWidgets.QLabel(self.widget_8)
        self.HighLabel.setGeometry(QtCore.QRect(100, 30, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.HighLabel.setFont(font)
        self.HighLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.HighLabel.setObjectName("HighLabel")
        self.ConnectionStatus = QtWidgets.QLabel(self.widget_4)
        self.ConnectionStatus.setGeometry(QtCore.QRect(200, 330, 161, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.ConnectionStatus.setFont(font)
        self.ConnectionStatus.setStyleSheet("color: rgb(255, 255, 255);")
        self.ConnectionStatus.setAlignment(QtCore.Qt.AlignCenter)
        self.ConnectionStatus.setObjectName("ConnectionStatus")
        self.label_17 = QtWidgets.QLabel(self.widget_4)
        self.label_17.setGeometry(QtCore.QRect(0, 330, 161, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("color: rgb(232, 232, 232);")
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.widget_7 = QtWidgets.QWidget(self.widget_4)
        self.widget_7.setGeometry(QtCore.QRect(0, 164, 370, 80))
        self.widget_7.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(36, 40, 58);")
        self.widget_7.setObjectName("widget_7")
        self.label_9 = QtWidgets.QLabel(self.widget_7)
        self.label_9.setGeometry(QtCore.QRect(160, 0, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_9.setFont(label_font)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.LowLabel = QtWidgets.QLabel(self.widget_7)
        self.LowLabel.setGeometry(QtCore.QRect(100, 30, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.LowLabel.setFont(font)
        self.LowLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.LowLabel.setObjectName("LowLabel")
        self.widget_2.raise_()
        self.LivePrice.raise_()
        self.widget_4.raise_()
        self.label_6.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 370, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuTheme = QtWidgets.QMenu(self.menuView)
        self.menuTheme.setObjectName("menuTheme")
        self.menuLanguage = QtWidgets.QMenu(self.menuView)
        self.menuLanguage.setObjectName("menuLanguage")
        MainWindow.setMenuBar(self.menubar)
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionExit.triggered.connect(MainWindow.close)
        self.actionRefresh = QtWidgets.QAction(MainWindow)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionRefresh.triggered.connect(self.RefreshData)
        self.actionLight = QtWidgets.QAction(MainWindow)
        self.actionLight.setObjectName("actionLight")
        self.actionLight.triggered.connect(self.LightMode)
        self.actionDark = QtWidgets.QAction(MainWindow)
        self.actionDark.setObjectName("actionDark")
        self.actionDark.triggered.connect(self.DarkMode)
        self.actionPersian = QtWidgets.QAction(MainWindow)
        self.actionPersian.setObjectName("actionPersian")
        self.actionPersian.triggered.connect(self.persianLanguage)
        self.actionEnglish = QtWidgets.QAction(MainWindow)
        self.actionEnglish.setObjectName("actionEnglish")
        self.actionEnglish.triggered.connect(self.EnglishLanguage)
        self.menuFile.addAction(self.actionRefresh)
        self.menuFile.addAction(self.actionExit)
        self.menuTheme.addAction(self.actionLight)
        self.menuTheme.addAction(self.actionDark)
        self.menuLanguage.addSeparator()
        self.menuLanguage.addAction(self.actionPersian)
        self.menuLanguage.addAction(self.actionEnglish)
        self.menuView.addAction(self.menuTheme.menuAction())
        self.menuView.addAction(self.menuLanguage.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.RefreshButton.clicked.connect(self.RefreshData)
        self.comboBox.currentTextChanged.connect(self.ComboBoxStatus)
#_________________________________________________________________________________________________________________________________________________________________________________________________
        self.DollarPrice()
    def ComboBoxStatus(self,text):
        if text=='Dollar':
            self.DollarPrice()
        elif text=='Gold':
            self.GoldPrice()
        
    def DollarPrice(self):
        try:
            r=requests.get('https://www.tgju.org/%D9%82%DB%8C%D9%85%D8%AA-%D8%AF%D9%84%D8%A7%D8%B1')
            self.status=r.status_code
            if self.status == 200:
                self.ConnectionStatus.setText('Connected')
            else:
                self.ConnectionStatus.setText('Connection Failure',f'failed with status code: {r.status_code}')
            soup= BeautifulSoup(r.text, 'html.parser')
            text1=soup.find('tr', {"data-market-nameslug":"price_dollar_rl"})
            green_texts = text1.find_all(class_='high')
            red_texts = text1.find_all(class_='low')
            text=soup.find('p')
            text=text.text
            text1=text1.text
            all_information=text1.splitlines()
            self.result_time=re.findall(r'(..\:..)', text)
            self.result_date=re.findall(r'(....\/..\/..)', text)
            live_price, Change, low, high=all_information[2], all_information[3], all_information[4], all_information[5]
            self.LivePrice.setText(live_price)
            self.OpeningLabel.setText(live_price)
            self.ChangeLabel.setText(Change)
            self.LowLabel.setText(low)
            self.HighLabel.setText(high)
            self.label_6.setText(Change)
            self.TimeLabel.setText(self.result_time[0])
            self.DateLabel.setText(self.result_date[0])
            if len(green_texts) > 0:
                self.LivePrice.setStyleSheet("background-color: #28A745;\n")
                self.label_6.setStyleSheet("background-color: #28A745;\n")
                self.ChangeLabel.setStyleSheet("color: #28A745;\n")
            elif len(red_texts) > 0:
                self.LivePrice.setStyleSheet("background-color: #DC3545;\n")
                self.label_6.setStyleSheet("background-color: #DC3545;\n")
                self.ChangeLabel.setStyleSheet("color: #DC3545;\n")
            else:
                self.LivePrice.setStyleSheet("background-color:rgb(36, 40, 58);\n color: rgb(255, 255, 255);")
                self.label_6.setStyleSheet("background-color:rgb(36, 40, 58);\n color: rgb(255, 255, 255);")
                if self.LivePrice.setStyleSheet==("background-color:rgb(36, 40, 58);"):
                    self.ChangeLabel.setStyleSheet("color: rgb(255, 255, 255);\n")
        except Exception as e:
            self.ConnectionStatus.setText("Error")
            self.ConnectionStatus.setToolTip(f"Error: {e}")
            self.LivePrice.setText("Error")
            self.OpeningLabel.setText("Error")
            self.ChangeLabel.setText("Error")
            self.LowLabel.setText("Error")
            self.HighLabel.setText("Error")
            self.label_6.setText("Error")
            self.TimeLabel.setText("Error")
            self.DateLabel.setText("Error")
    
    def GoldPrice(self):
        try:
            r=requests.get('https://www.tgju.org/profile/geram18')
            if r.status_code== 200:
                self.ConnectionStatus.setText('Connected')
            else:
                self.ConnectionStatus.setText('Connection Failure',f'failed with status code: {r.status_code}')
            soup= BeautifulSoup(r.text, 'html.parser')
            all_information=soup.findAll('tr')
            live_price=all_information[1].text
            live=live_price.splitlines()
            live=live[2]
            high=all_information[2].text
            high=high.splitlines()
            high=high[2]
            low=all_information[3].text
            low=low.splitlines()
            low=low[2]
            change1=all_information[9].text
            change1=change1.splitlines()
            change1=change1[2]
            change2=all_information[10].text
            change2=change2.splitlines()
            change2=change2[2]
            real_change="("+change1+")"+" "+change2
            self.LivePrice.setText(live)
            self.OpeningLabel.setText(live)
            self.ChangeLabel.setText(real_change)
            self.LowLabel.setText(low)
            self.HighLabel.setText(high)
            self.label_6.setText(real_change)
            self.TimeLabel.setText(self.result_time[0])
            self.DateLabel.setText(self.result_date[0])
            colorPrice=all_information[9]
            green_texts = colorPrice.find_all(class_='high')
            red_texts = colorPrice.find_all(class_='low')
            if len(green_texts) > 0:
                self.LivePrice.setStyleSheet("background-color: #28A745;\n")
                self.label_6.setStyleSheet("background-color: #28A745;\n")
                self.ChangeLabel.setStyleSheet("color: #28A745;\n")
            elif len(red_texts) > 0:
                self.LivePrice.setStyleSheet("background-color: #DC3545;\n")
                self.label_6.setStyleSheet("background-color: #DC3545;\n")
                self.ChangeLabel.setStyleSheet("color: #DC3545;\n")
            else:
                self.LivePrice.setStyleSheet("background-color:rgb(36, 40, 58);\n color: rgb(255, 255, 255);")
                self.label_6.setStyleSheet("background-color:rgb(36, 40, 58);\n color: rgb(255, 255, 255);")
                if self.LivePrice.setStyleSheet==("background-color:rgb(36, 40, 58);"):
                    self.ChangeLabel.setStyleSheet("color: rgb(255, 255, 255);\n")
        except Exception as e:
            self.ConnectionStatus.setText("Error")
            self.ConnectionStatus.setToolTip(f"Error: {e}")
            self.LivePrice.setText("Error")
            self.OpeningLabel.setText("Error")
            self.ChangeLabel.setText("Error")
            self.LowLabel.setText("Error")
            self.HighLabel.setText("Error")
            self.label_6.setText("Error")
            self.TimeLabel.setText("Error")
            self.DateLabel.setText("Error")

    def RefreshData(self):
        print('refresh')
        if self.comboBox.currentText()=='Dollar':
            self.DollarPrice()
        elif self.comboBox.currentText()=='Gold':
            self.GoldPrice()
        else:
            print('error')

    def persianLanguage(self):
        self.menuFile.setTitle('فایل')
        self.menuView.setTitle('نمایش')
        self.menuTheme.setTitle('تم')
        self.menuLanguage.setTitle('زبان')
        self.actionExit.setText('خروج')
        self.actionRefresh.setText('به روز رسانی')
        self.actionLight.setText('روشن')
        self.actionDark.setText('تاریک')
        self.actionPersian.setText('فارسی')
        self.actionEnglish.setText('انگلیسی')
        self.label_2.setText('آخرین به روز رسانی')
        self.label_7.setText('قیمت زنده')
        self.label_8.setText('تغییر')
        self.label_9.setText('کمترین')
        self.label_10.setText('بیشترین')
        self.label_2.setGeometry(QtCore.QRect(50, 0, 91, 21))
    def EnglishLanguage(self):
        self.menuFile.setTitle('File')
        self.menuView.setTitle('View')
        self.menuTheme.setTitle('Theme')
        self.menuLanguage.setTitle('Language')
        self.actionExit.setText('Exit')
        self.actionRefresh.setText('Refresh')
        self.actionLight.setText('Light')
        self.actionDark.setText('Dark')
        self.actionPersian.setText('Persian')
        self.actionEnglish.setText('English')
        self.label_2.setText('Last Update')
        self.label_7.setText('Opening')
        self.label_8.setText('Change')
        self.label_9.setText('Low')
        self.label_10.setText('High')
        self.label_2.setGeometry(QtCore.QRect(71, 0, 91, 21))
    def LightMode(self):
        self.widget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.widget_2.setStyleSheet("background-color: rgb(147,148,165);")
        self.RefreshButton.setStyleSheet("background-color: rgb(147,148,165);\n")
        self.widget_4.setStyleSheet("background-color: rgb(210,211,219);")
        self.ConnectionStatus.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_17.setStyleSheet("color: rgb(0, 0, 0);")
        self.widget_3.setStyleSheet("color: rgb(0, 0, 0);")
        self.comboBox.setStyleSheet("color: rgb(0, 0, 0);")    
        self.widget_5.setStyleSheet("color: rgb(0, 0, 0);\n"
        "background-color: rgb(228,229,241);")
        self.widget_6.setStyleSheet("background-color: rgb(228,229,241);")
        self.widget_7.setStyleSheet("color: rgb(0, 0, 0);\n"
        "background-color: rgb(228,229,241);")
        self.widget_8.setStyleSheet("color: rgb(0, 0, 0);\n"
        "background-color: rgb(228,229,241);")
        self.label_8.setStyleSheet("color: rgb(0, 0, 0);")
    def DarkMode(self):
        self.widget.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.widget_2.setStyleSheet("background-color: rgb(36, 40, 58);")
        self.RefreshButton.setStyleSheet("background-color: rgb(74, 84, 115);\n"
        "background-color: rgb(86, 103, 115);\n"
        "\n"
        "border: none;")
        self.widget_4.setStyleSheet("background-color: rgb(24, 26, 39);")
        self.ConnectionStatus.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_17.setStyleSheet("color: rgb(232, 232, 232);")
        self.widget_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.comboBox.setStyleSheet("color: rgb(255, 255, 255);\n""")
        #---------------------------------------------------------------------------
        self.widget_5.setStyleSheet("color: rgb(255, 255, 255);\n"
        "background-color: rgb(36, 40, 58);")
        self.widget_6.setStyleSheet("background-color: rgb(36, 40, 58);")
        self.label_8.setStyleSheet("color: rgb(255, 255, 255);\n")
        self.widget_7.setStyleSheet("color: rgb(255, 255, 255);\n"
        "background-color: rgb(36, 40, 58);")
        self.widget_8.setStyleSheet("color: rgb(255, 255, 255);\n"
        "background-color: rgb(36, 40, 58);")
        if self.LivePrice.setStyleSheet==("background-color:rgb(36, 40, 58);"):
                    self.ChangeLabel.setStyleSheet("color: rgb(255, 255, 255);\n")
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Market"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Dollar"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Gold"))
        # self.comboBox.setItemText(2, _translate("MainWindow", "Coin"))
        # self.comboBox.setItemText(3, _translate("MainWindow", "Bitcoin"))
        self.label_2.setText(_translate("MainWindow", "Last Update"))
        self.DateLabel.setText(_translate("MainWindow", "0000/00/00"))
        self.TimeLabel.setText(_translate("MainWindow", "00:00"))
        self.LivePrice.setText(_translate("MainWindow", "Loading..."))
        self.label_6.setText(_translate("MainWindow", "(0%) 0"))
        self.label_7.setText(_translate("MainWindow", "Opening"))
        self.OpeningLabel.setText(_translate("MainWindow", "Loading..."))
        self.label_8.setText(_translate("MainWindow", "Change"))
        self.ChangeLabel.setText(_translate("MainWindow", "Loading..."))
        self.label_10.setText(_translate("MainWindow", "High"))
        self.HighLabel.setText(_translate("MainWindow", "Loading..."))
        self.ConnectionStatus.setText(_translate("MainWindow", "Loading..."))
        self.label_17.setText(_translate("MainWindow", "nima9059jafari@yahoo.com"))
        self.label_9.setText(_translate("MainWindow", "Low"))
        self.LowLabel.setText(_translate("MainWindow", "Loading..."))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuTheme.setTitle(_translate("MainWindow", "Theme"))
        self.menuLanguage.setTitle(_translate("MainWindow", "Language"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionRefresh.setText(_translate("MainWindow", "Refresh"))
        self.actionLight.setText(_translate("MainWindow", "Light"))
        self.actionDark.setText(_translate("MainWindow", "Dark"))
        self.actionPersian.setText(_translate("MainWindow", "Persian"))
        self.actionEnglish.setText(_translate("MainWindow", "English"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())